<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SmallShawn95&#39;s Home</title>
  <icon>https://www.gravatar.com/avatar/28f7f191da0281511847e3c110850611</icon>
  
  <link href="http://smallshawn95.github.io/atom.xml" rel="self"/>
  
  <link href="http://smallshawn95.github.io/"/>
  <updated>2024-02-05T15:27:05.627Z</updated>
  <id>http://smallshawn95.github.io/</id>
  
  <author>
    <name>SmallShawn95</name>
    <email>smallshawn95@gmail.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Cipher Document</title>
    <link href="http://smallshawn95.github.io/cipher_document/"/>
    <id>http://smallshawn95.github.io/cipher_document/</id>
    <published>2024-02-05T13:15:00.000Z</published>
    <updated>2024-02-05T15:27:05.627Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="9deffc7cb9b2dc59624a4adb67636e072e890cb83deb6b5a073a14547fdf3096">c0fda9f44009463564b46e6750d187540680bfd090d87da520ab43b5922f8c43d9f42f51f0ef60a4e4fa4edbf464d80427ff769a7218f95c5800e2ec6886e6868bca9a5a594d50d987b612ba4ae1bf71ee1c5e43be715ef1ece5332c694f246d78dac61f20e03a04062e765735d6ff7640cccf7285ba906bcfe7fe9a769545ec04ddd4f46dced08f78336482b1f57211ce00240818a519b1538495e9f7478715f407504d1916f5f7eac1343d915b90c90b0fc51dc1d15cd8233dbd422c57c3014022eae5f1c52be6c3a67941a3983c426e514e71deb7f4f34233d69c4ca83cf55c8e8d89a26e57515979e80724b34b8296e295f49d4987dc1c7aa9c2ee1cac83776692c624c5d34413dc37a4df204a45cf32f5b5f1b2a54f401a4bd67040db00ba065832ff28e529313d8161cac128bc8c964794de5c08ffe3a3f1195d38b4a655133986695dec555d327602ead0bef1d2cd0b72c2774f59cbe1e1b2a114434d46d6e78ed194ea84e8ee76a42a55baec2ee18443397b3e3bfd95e6c90d95ebe178aa70580155ff33dd86a57a9ab4446b6c9444478f4bde866ff0ced92a8c47a5088eae776c6f343de8e980d9363e8a75601d7513a7bd2958941c8102a9106ec599d69b863749ef0b143d2792dc4d3f42dca6bb73c1173c38c0ab9f1758f61a91c998aebf29d345fc417f53970ed552e00066938ca1bdf3bfe7638ed6454959cedd5ac273e65d79c1580b06cedd553aaebe2c9a128a3c22da893c1ad2ae61e04d5e05a85df577aaecc5ae9bf9da4387dc9c07f929c976eff37af78bd34e64ca212a667e1c840afc4b10075808d42d5507cc5912adcbc6e22b59ac18ab2e64f01dad533dfcfd5239d92d79c711afe59c40a1bc54a3be3e3ce9c26894055d355e646c38d89f3b5566e2978230776d56f3434e483775ad1623ddcd506b9a745311ab052a8870df5f7573aa949aef02fbbcb75be09282b884ce257b1c9656979aa6807396736e9ac80492a708380b5b8f48b701fe38bc656392ffaf8614752144c4c07c6eabeeb05d8498974d190ef580e0596cd5e06888c20bb013c8129a2e035fdeff76df2415a13cdaeb6ec71e392ee33e21ff0db4e0eee2c77f1b144686e65d766df647ae63285dd9c263620971d44f8b1709662265b1b7ada099b521441fdc1943f7f44347e0a50127f65b94a269be7ef4f3e2dd4e4b853da67b54d0ec68486df2b26c510904880b3437e73bad6184489591f207f1f3867e36b4791e4cc966d513a1c2d892a59a57acfcc3d98fd5fa63da4a927205d158a3695fa6557fae701cece2efdde960653097083e9889cef425f162d280dd4e9dee5ae42385b3c47abdfc17be1b6a66fd77824b46c6cde6009114fa05f1a71079ce5d9c268a82e2e0ae51d1b8005b0d27f92533117dc5afdf08eca3fbb03a680d8756677516190706cf25d6882f4b8a4d585e69e5f9d2335b718e0e52d7d9561509b3aa524f91546669ebc290f7a168cf2df4c23154e3db042ccf1ea84be6bc1622dd493e7a5878a74e25ef4bbef8db751e7f3c9d9a71529eeb72c2d7d209a128e30810e12de833d2b3b38fc50ec8034ec6cbd49920bba691d819afc18b3862d387001e9ee408482ca11779b9974bbb892ac89c4da0f8c7e10b4d2a748e8f2f9491e514e6e97c4205b52eea67646a8fdca41c9dd3e1c4b6cf903149043d286ca7d9c3ca7d9446731599fe884840914d3819f628ed5233a969066ca5cb6e9ab3ede798398ca4253a1ba526aefd4b8d36a6cad70734f4ca253f8d65d6e422baf00ebf9156444869fa21629b0355ddfe7290f546d3d9fc3d5638c9693ab1d77f6656372c2fbd0902f20aedcecf99e7441bfb06a074939da582bb38989cfcd88b25c108470350a0419d89da688e7caf51771d37567b8804331cc191f24c9e4c671ff24dad7eed9d318207c9</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">這是一篇加密文章，需要輸入密碼。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">這是一篇加密文章，需要輸入密碼，密碼 hello_world。</summary>
    
    
    
    <category term="Hexo 功能" scheme="http://smallshawn95.github.io/categories/Hexo-%E5%8A%9F%E8%83%BD/"/>
    
    
  </entry>
  
  <entry>
    <title>Python Discord Bot 進階教學 — Embed 篇</title>
    <link href="http://smallshawn95.github.io/python_discord_bot_course/embed/"/>
    <id>http://smallshawn95.github.io/python_discord_bot_course/embed/</id>
    <published>2024-02-05T09:42:00.000Z</published>
    <updated>2024-02-05T10:16:15.834Z</updated>
    
    <content type="html"><![CDATA[<p>在開發 Discord Bot 時，最基本的功能就是發送一則訊息，然而，您可能會注意到某些 Bot 發出的訊息與自己的 Bot 或是使用者發送的訊息長得不太一樣，不僅有顏色、連結、使用者頭像、整齊的版面，還有不同的文字大小，甚至還能增加時間戳，究竟是用什麼工具來實現這些功能呢？接著看下去本篇教學吧。</p><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p><strong>歡迎加入筆者的 Discord 伺服器</strong> <a class="btn-beautify outline blue" href="https://discord.gg/Jtd3eVrFJs"   title="點此加入"><i class="far fa-hand-point-right"></i><span>點此加入</span></a></p></div><div class="note blue icon-padding flat"><i class="note-icon fa-solid fa-book"></i><p><strong>Python Discord Bot 教學文章和程式碼範例</strong> <a class="btn-beautify outline blue" href="https://github.com/smallshawn95/Python-Discord-Bot-Course.git"   title="點此前往"><i class="far fa-hand-point-right"></i><span>點此前往</span></a></p></div><hr><h2 id="ㄧ、Embed-簡介："><a href="#ㄧ、Embed-簡介：" class="headerlink" title="ㄧ、Embed 簡介："></a>ㄧ、Embed 簡介：</h2><p>Discord Embed 是 Discord Bot 中一個可以嵌入內容的訊息，讓訊息能夠以卡片的方式呈現更豐富的內容，像是添加標題、敘述、顏色、連結、時間戳等等。<br>Discord Embed 本身分為好幾個區塊，每個區塊都有相對應的函式，而這些函式是要拿來設定該區塊的內容和格式，接下來筆者就要來介紹 Embed 各區塊相對應的函式以及函式中的參數。<br>更多資訊可參考 <a href="https://discordpy.readthedocs.io/en/stable/api.html#discord.Embed">Discord.py Embed 官方文檔</a>。</p><p><img src="https://i.imgur.com/AHyHnTa.png" alt="01"></p><h2 id="二、Embed-撰寫："><a href="#二、Embed-撰寫：" class="headerlink" title="二、Embed 撰寫："></a>二、Embed 撰寫：</h2><div class="note orange no-icon flat"><p>📝 <strong>小工具推薦</strong><br>一個初學者剛學習撰寫 Embed 的好用工具，可以即時查看 Embed 的版面配置，並且輸入完各版面的設定和內容後，產生出來的程式碼就可以直接複製到 Bot 中使用。<br>連結：<a href="https://cog-creators.github.io/discord-embed-sandbox/">https://cog-creators.github.io/discord-embed-sandbox/</a><br><img src="https://i.imgur.com/g9EiPU6.png" alt="02"></p></div><h3 id="📎-discord-Embed"><a href="#📎-discord-Embed" class="headerlink" title="📎 discord.Embed()"></a>📎 discord.Embed()</h3><p>使用 Embed 工具時，要先創建一個 Embed 物件，通常會使用變數儲存，方便接下來的函式操作。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">embed = discord.Embed(title: <span class="built_in">str</span>, description: <span class="built_in">str</span>, url: <span class="built_in">str</span>, color: discord.Color, timestamp: datetime.datetime)</span><br></pre></td></tr></table></figure><ul><li><strong>title 標題</strong><br>  Embed 的標題，最多 256 個字符。</li><li><strong>description 描述</strong><br>  Embed 的描述，最多 4096 個字符。</li><li><strong>url 連結</strong><br>  將 Embed 的標題變成超連結。</li><li><strong>color 顏色</strong><br>  Embed 左側色條的顏色，設定顏色方式可參考<a href="#%E8%A8%BB%E4%B8%80">註一</a>。</li><li><strong>timestamp 時間戳</strong><br>  Embed 的時間戳，通常使用 <code>datetime.datetime.now()</code> 做設置，可以根據本地時區變更日期時間。</li></ul><p><img src="https://i.imgur.com/gu96400.png" alt="03"></p><h3 id="📎-set-thumbnail"><a href="#📎-set-thumbnail" class="headerlink" title="📎 set_thumbnail()"></a>📎 set_thumbnail()</h3><p>這個函式用來設置 Embed 縮圖。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">embed.set_thumbnail(url: <span class="built_in">str</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>url 連結</strong><br>  設置 Embed 縮圖的圖片連結，僅支援 HTTP(S)，如果想使用本地圖片可參考<a href="#%E8%A8%BB%E4%BA%8C">註二</a>。</li></ul><p><img src="https://i.imgur.com/LwrbCGI.png" alt="04"></p><h3 id="📎-set-author"><a href="#📎-set-author" class="headerlink" title="📎 set_author()"></a>📎 set_author()</h3><p>這個函式用來設置 Embed 作者。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">embed.set_author(name: <span class="built_in">str</span>, url: <span class="built_in">str</span>, icon_url: <span class="built_in">str</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>name 名稱</strong><br>  設置 Embed 作者的名稱。</li><li><strong>url 連結</strong><br>  將 Embed 作者名稱變成超連結。</li><li><strong>icon_url 頭像連結</strong><br>  設置 Embed 作者頭像的圖片連結，僅支援 HTTP(S)，如果想使用本地圖片可參考<a href="#%E8%A8%BB%E4%BA%8C">註二</a>。</li></ul><p><img src="https://i.imgur.com/Ai70CJU.png" alt="05"></p><h3 id="📎-set-image"><a href="#📎-set-image" class="headerlink" title="📎 set_image()"></a>📎 set_image()</h3><p>這個函式用來設置 Embed 圖片。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">embed.set_image(url: <span class="built_in">str</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>url 連結</strong><br>  設置 Embed 圖片的圖片連結，僅支援 HTTP(S)，如果想使用本地圖片可參考<a href="#%E8%A8%BB%E4%BA%8C">註二</a>。</li></ul><p><img src="https://i.imgur.com/HG5Rm9d.png" alt="06"></p><h3 id="📎-set-footer"><a href="#📎-set-footer" class="headerlink" title="📎 set_footer()"></a>📎 set_footer()</h3><p>這個函式用來設置 Embed 頁尾。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">embed.set_footer(text: <span class="built_in">str</span>, icon_url: <span class="built_in">str</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>text 文字</strong><br>  設置 Embed 頁尾的名稱。</li><li><strong>icon_url 頭像連結</strong><br>  設置 Embed 頁尾頭像的圖片連結，僅支援 HTTP(S)，如果想使用本地圖片可參考<a href="#%E8%A8%BB%E4%BA%8C">註二</a>。</li></ul><p><img src="https://i.imgur.com/dU5m0yq.png" alt="07"></p><h3 id="📎-add-field"><a href="#📎-add-field" class="headerlink" title="📎 add_field()"></a>📎 add_field()</h3><p>添加一個欄位到 Embed 中的函式，一個 Embed 最多只能添加 25 個欄位。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">embed.add_field(name: <span class="built_in">str</span>, value: <span class="built_in">str</span>, inline: <span class="built_in">bool</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>name 名稱</strong><br>  欄位的名稱，256 個字元。</li><li><strong>value 內容</strong><br>  欄位的內容，1024 個字元。</li><li><strong>inline 同行</strong><br>  是否讓欄位呈現在同一行，選擇同一行會根據版面大小自行調整位置。</li></ul><table><thead><tr><th align="center">同一行</th><th align="center">不同一行</th></tr></thead><tbody><tr><td align="center"><img src="https://i.imgur.com/VWDuFK9.png" alt="08"></td><td align="center"><img src="https://i.imgur.com/JZDvipo.png" alt="09"></td></tr></tbody></table><h2 id="三、Embed-傳送："><a href="#三、Embed-傳送：" class="headerlink" title="三、Embed 傳送："></a>三、Embed 傳送：</h2><p>只要多添加一個 embed 參數，即可傳送 Embed 訊息。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> interaction.response.send_message(embed = embed)</span><br></pre></td></tr></table></figure><p>如果想要傳送多個 Embed 訊息，可以使用 embeds 參數，使用串列傳入，最多包含 10 個 Embed。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> interaction.response.send_message(embeds = [embed_1, embed_2])</span><br></pre></td></tr></table></figure><h2 id="四、文章註解："><a href="#四、文章註解：" class="headerlink" title="四、文章註解："></a>四、文章註解：</h2><h3 id="註一"><a href="#註一" class="headerlink" title="註一"></a>註一</h3><p>要設置 Embed 顏色可以使用下列方式，詳細內容可查看 <a href="https://discordpy.readthedocs.io/en/stable/api.html#discord.Colour">Discord.py Color 官方文檔</a>。</p><ul><li><strong>discord.Color.random()</strong></li><li><strong>discord.Color.顏色名稱()</strong></li><li><strong>discord.Color.from_rgb(r, g, b)</strong><ul><li>r 【0-255】</li><li>g 【0-255】</li><li>b 【0-255】</li></ul></li><li><strong>discord.Color.from_str(“字串”)</strong><br>  備註：hex 代表十六進位制顏色，num 代表 0-255 或 0-100%<ul><li>0x<hex> 【0x00ffff】</li><li>#<hex> 【#00ffff】</li><li>0x#<hex> 【0x#00ffff】</li><li>rgb(<num>, <num>, <num>) 【rgb(0, 255, 255)】</li></ul></li></ul><h3 id="註二"><a href="#註二" class="headerlink" title="註二"></a>註二</h3><p>要使用本地圖片顯示在 Embed 中的話，需要先使用 File 上傳圖片，以下為程式碼範例。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先將圖片傳到 Discord 上</span></span><br><span class="line">file = discord.File(<span class="string">&quot;圖片檔名&quot;</span>)</span><br><span class="line"><span class="comment"># Embed 要使用此圖片，只要 attachment://圖片檔名 即可使用</span></span><br><span class="line">embed = discord.Embed()</span><br><span class="line">embed.set_image(<span class="string">&quot;attachment://圖片檔名&quot;</span>)</span><br><span class="line"><span class="comment"># 回覆使用者的訊息</span></span><br><span class="line"><span class="keyword">await</span> interaction.response.send_message(file = file, embed = embed)</span><br></pre></td></tr></table></figure><hr><p>本次 Discord Embed 教學就到此結束囉！如果看完此篇教學覺得有幫助的話，可以幫筆者分享給更多剛學習 Discord Bot 的程式人，能夠讓大家輕鬆學會更多新技能，就是筆者莫大的榮幸，如果有大神覺得文章內容有誤或不完整，也歡迎到筆者的 Discord 伺服器中跟筆者反映、討論，敬請期待下一篇教學，最後非常感謝大家看完此篇教學！<br>這邊只介紹出 Embed 中比較常用到的函式，剩餘其他的函式可以到官方文檔自行研究。</p>]]></content>
    
    
    <summary type="html">在開發 Discord Bot 時，最基本的功能就是發送一則訊息，然而，您可能會注意到某些 Bot 發出的訊息與自己的 Bot 或是使用者發送的訊息長得不太一樣，不僅有顏色、連結、使用者頭像、整齊的版面，還有不同的文字大小，甚至還能增加時間戳，究竟是用什麼工具來實現這些功能呢？接著看下去本篇教學吧。</summary>
    
    
    
    <category term="Python Discord Bot 教學" scheme="http://smallshawn95.github.io/categories/Python-Discord-Bot-%E6%95%99%E5%AD%B8/"/>
    
    
    <category term="Discord Bot" scheme="http://smallshawn95.github.io/tags/Discord-Bot/"/>
    
    <category term="Python" scheme="http://smallshawn95.github.io/tags/Python/"/>
    
    <category term="教學文" scheme="http://smallshawn95.github.io/tags/%E6%95%99%E5%AD%B8%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>Visual Studio Code 撰寫 Python 程式</title>
    <link href="http://smallshawn95.github.io/visual_studio_code/write_python/"/>
    <id>http://smallshawn95.github.io/visual_studio_code/write_python/</id>
    <published>2023-11-05T14:25:00.000Z</published>
    <updated>2023-11-05T14:43:49.278Z</updated>
    
    <content type="html"><![CDATA[<p>本文章適用於 Windows 作業系統，將會把 Visual Studio Code 搭建成一個能夠撰寫 Python 的 IDE。</p><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p><strong>歡迎加入筆者的 Discord 伺服器</strong> <a class="btn-beautify outline blue" href="https://discord.gg/Jtd3eVrFJs"   title="點此加入"><i class="far fa-hand-point-right"></i><span>點此加入</span></a></p></div><hr><h2 id="一、安裝-VSCode："><a href="#一、安裝-VSCode：" class="headerlink" title="一、安裝 VSCode："></a>一、安裝 VSCode：</h2><ol><li><p>到 VSCode 官網下載 VSCode 的安裝檔。<br> 連結：<a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a><br> <img src="https://i.imgur.com/BdoAZbc.png" alt="00"></p></li><li><p>開啟安裝檔，接著只要一直按下一步就能安裝完成，到附加工作這一頁推薦全勾取。<br> <img src="https://i.imgur.com/2wkZsOj.png" alt="01"></p></li><li><p>安裝寫 Python 必備和更便利的擴充功能，先進入到管理擴充功能的地方，點擊最左邊工具列四個框框的圖標或者按下快捷鍵 Ctrl + Shift + X。<br> <img src="https://i.imgur.com/QY4FiqW.png" alt="02"></p></li><li><p>於輸入框中輸入想要安裝的功能名稱，接著按下安裝並重啟 VSCode 即可安裝完畢。<br> <img src="https://i.imgur.com/bhCxvKk.png" alt="03"></p></li></ol><ul><li><p><strong>Chinese (Traditional) Language Pack for Visual Studio Code</strong><br>  能將 VSCode 翻譯成繁體中文，對於英文不好的朋友簡直是一大福音。<br>  連結：<a href="https://marketplace.visualstudio.com/items?itemName=MS-CEINTL.VSCode-language-pack-zh-hant">https://marketplace.visualstudio.com/items?itemName=MS-CEINTL.VSCode-language-pack-zh-hant</a><br>  <img src="https://i.imgur.com/Y8qjubS.jpg" alt="04"></p></li><li><p><strong>Python</strong><br>  要寫 Python 程式語言，這是一定要裝的擴充功能。<br>  連結：<a href="https://marketplace.visualstudio.com/items?itemName=ms-python.python">https://marketplace.visualstudio.com/items?itemName=ms-python.python</a><br>  <img src="https://i.imgur.com/olpi5o1.jpg" alt="05"></p></li></ul><h2 id="二、安裝-Python："><a href="#二、安裝-Python：" class="headerlink" title="二、安裝 Python："></a>二、安裝 Python：</h2><ol><li><p>到 Python 官網下載 Python 安裝檔，安裝最新版本即可。<br> 連結：<a href="https://www.python.org/">https://www.python.org/</a><br> <img src="https://i.imgur.com/WrGB1rH.png" alt="06"></p></li><li><p>開啟安裝檔，勾選 Add python.exe to PATH，讓 Python 自動加入 Windows 環境變數。<br> <img src="https://i.imgur.com/j46zFF6.png" alt="07"></p></li><li><p>將電腦重新啟動，讓環境變數生效。<br> <img src="https://i.imgur.com/Nqo9wSZ.png" alt="08"></p></li></ol><h2 id="三、執行-VSCode-的第一個-Python："><a href="#三、執行-VSCode-的第一個-Python：" class="headerlink" title="三、執行 VSCode 的第一個 Python："></a>三、執行 VSCode 的第一個 Python：</h2><ol><li><p>使用 VSCode 開啟一個資料夾，新增一個新檔案。<br> <img src="https://i.imgur.com/ZEXi3d6.png" alt="09"></p></li><li><p>寫出 VSCode 中的第一個 Python 程式 “Hello, world!” 吧。</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello, world!&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>如果終端機成功顯示 “Hello, world!” 的話，恭喜接下來就能開心寫 Python 程式囉！<br> <img src="https://i.imgur.com/2AtM9El.png" alt="10"> <img src="https://i.imgur.com/zaHUJED.png" alt="11"></p></li></ol>]]></content>
    
    
    <summary type="html">本文章適用於 Windows 作業系統，將會把 Visual Studio Code 搭建成一個能夠撰寫 Python 的 IDE。</summary>
    
    
    
    <category term="Visual Studio Code 教學" scheme="http://smallshawn95.github.io/categories/Visual-Studio-Code-%E6%95%99%E5%AD%B8/"/>
    
    
    <category term="Python" scheme="http://smallshawn95.github.io/tags/Python/"/>
    
    <category term="教學文" scheme="http://smallshawn95.github.io/tags/%E6%95%99%E5%AD%B8%E6%96%87/"/>
    
    <category term="Visual Studio Code" scheme="http://smallshawn95.github.io/tags/Visual-Studio-Code/"/>
    
  </entry>
  
  <entry>
    <title>Visual Studio Code 撰寫 C++ 程式</title>
    <link href="http://smallshawn95.github.io/visual_studio_code/write_cpp/"/>
    <id>http://smallshawn95.github.io/visual_studio_code/write_cpp/</id>
    <published>2023-11-05T13:35:00.000Z</published>
    <updated>2023-11-05T14:23:29.305Z</updated>
    
    <content type="html"><![CDATA[<p>本篇教學適用於 Windows 作業系統，將會使用 VSCode + MinGW 來搭建一個能夠撰寫 C++ 的 IDE。<br>Visual Studio Code（簡稱：VSCode）是一個文本編輯器，支援語法突顯、程式碼補齊等等功能，簡單來說，就是一個強化版的 Windows 記事本，雖然預設已經支援許多程式語言，如 JavaScript、CSS、HTML 等等，如果要讓它執行更多種類的程式語言，如 C、C++、Python、Java 等等，就需要額外安裝工具和擴充功能。<br>Minimalist GNU for Windows（簡稱：MinGW）是將 GCC 編譯和 GNU Binutils 移植到 Windows 環境上的版本，讓 C、C++ 能夠在 Windows 環境中運行。</p><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p><strong>歡迎加入筆者的 Discord 伺服器</strong> <a class="btn-beautify outline blue" href="https://discord.gg/Jtd3eVrFJs"   title="點此加入"><i class="far fa-hand-point-right"></i><span>點此加入</span></a></p></div><hr><h2 id="一、安裝-VSCode："><a href="#一、安裝-VSCode：" class="headerlink" title="一、安裝 VSCode："></a>一、安裝 VSCode：</h2><ol><li><p>到 VSCode 官網下載 VSCode 的安裝檔。<br>連結：<a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a><br><img src="https://i.imgur.com/4ZcwCtk.png" alt="00"></p></li><li><p>開啟安裝檔，接著只要一直按下一步就能安裝完成，到附加工作這一頁推薦全勾取。<br><img src="https://i.imgur.com/BbsyTup.png" alt="01"></p></li><li><p>安裝寫 C++ 必備和更便利的延伸模組，先進入到管理延伸模組的地方，點擊最左邊工具列四個框框的圖標或者按下快捷鍵 Ctrl + Shift + X。<br><img src="https://i.imgur.com/6kZAKuW.png" alt="02"></p></li><li><p>於輸入框中輸入想要安裝的功能名稱，接著按下安裝並重啟 VSCode 即可安裝完畢。<br><img src="https://i.imgur.com/izDzpdK.png" alt="03"></p></li></ol><ul><li><p><strong>Chinese (Traditional) Language Pack for Visual Studio Code</strong><br> 能將 VSCode 翻譯成繁體中文，對於英文不好的朋友簡直是一大福音。<br> 連結：<a href="https://marketplace.visualstudio.com/items?itemName=MS-CEINTL.VSCode-language-pack-zh-hant">https://marketplace.visualstudio.com/items?itemName=MS-CEINTL.VSCode-language-pack-zh-hant</a><br> <img src="https://i.imgur.com/zCfEZbi.jpg" alt="04"></p></li><li><p><strong>C&#x2F;C++ Extension Pack</strong><br> 要寫 C++ 程式，這是一定要裝的延伸模組包。<br> 連結：<a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools-extension-pack">https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools-extension-pack</a><br> <img src="https://i.imgur.com/n0uxr7D.jpg" alt="05"></p></li><li><p><strong>Code Runner</strong><br> 能夠讓執行程式更方便的延伸模組，極度推薦安裝。<br> 連結：<a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner">https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner</a><br> <img src="https://i.imgur.com/x50PtFo.jpg" alt="06"></p></li></ul><h2 id="二、安裝-MinGW："><a href="#二、安裝-MinGW：" class="headerlink" title="二、安裝 MinGW："></a>二、安裝 MinGW：</h2><ol><li><p>到 GitHub 的 mingw-builds-binaries 專案中下載最新版的 MinGW，頁面滑到 Assets 部分可以下載壓縮檔，根據系統選擇 32bit(i868) 或 64bit(x86_64)，筆者以下使用 <code>x86_64-12.2.0-release-win32-seh-ucrt-rt_v10-rev2.7z</code> 作為示範。<br>連結：<a href="https://github.com/niXman/mingw-builds-binaries/releases">https://github.com/niXman/mingw-builds-binaries/releases</a><br><img src="https://i.imgur.com/kXnQ3zc.png" alt="07"></p></li><li><p>由於下載回來的壓縮檔是 .7z 副檔名，所以需要安裝 7-Zip 軟體來解壓縮。<br>連結：<a href="https://www.7-zip.org/">https://www.7-zip.org/</a><br><img src="https://i.imgur.com/ohR6xYV.png" alt="08"> <img src="https://i.imgur.com/ZyO1uLg.png" alt="09"></p></li><li><p>開啟 7-Zip 軟體，移動到剛才下載壓縮檔的位置，選擇壓縮檔並點選解壓縮。<br><img src="https://i.imgur.com/aYaCgko.png" alt="10"> <img src="https://i.imgur.com/0dYkQqy.png" alt="11"></p></li><li><p>點進去解壓縮好的資料夾中，會有名為 mingw64 的資料夾，將它移動到 C 槽。<br><img src="https://i.imgur.com/fKT1r3R.png" alt="12"></p></li></ol><h2 id="三、設置-Windows-環境變數："><a href="#三、設置-Windows-環境變數：" class="headerlink" title="三、設置 Windows 環境變數："></a>三、設置 Windows 環境變數：</h2><ol><li><p>開啟電腦設定中的系統資訊，點擊進階系統設定，再點擊環境變數。<br><img src="https://i.imgur.com/3ddmYQV.png" alt="13"></p></li><li><p>選擇下方系統變數裡面的 Path，點擊編輯。<br><img src="https://i.imgur.com/8I6riGH.png" alt="14"></p></li><li><p>點擊新增鍵，將 <code>C:\mingw64\bin</code> 加入到 Path 中。<br><img src="https://i.imgur.com/kdMm1l1.png" alt="15"></p></li></ol><h2 id="四、設置-VSCode-環境："><a href="#四、設置-VSCode-環境：" class="headerlink" title="四、設置 VSCode 環境："></a>四、設置 VSCode 環境：</h2><ol><li><p>按下快捷鍵 Ctrl + Shift + P 或者 F1，然後輸入 Open User Settings，打開 VSCode Setting Json 檔。<br><img src="https://i.imgur.com/6FhXLMT.png" alt="16"></p></li><li><p>加入下面兩行程式碼到 VSCode Setting Json 檔中，這兩行程式都是避免 C++ 輸出的繁體中文是亂碼。<br><img src="https://i.imgur.com/gu3uBaw.jpg" alt="17"></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 讓 Code Runner 將 C++ 執行在終端機中</span></span><br><span class="line"><span class="attr">&quot;code-runner.runInTerminal&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line"><span class="comment">// 預設 C++ 程式碼的編碼方式為 Big5(繁體中文標準庫)</span></span><br><span class="line"><span class="attr">&quot;[cpp]&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;files.encoding&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cp950&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="五、執行-VSCode-的第一個-C-："><a href="#五、執行-VSCode-的第一個-C-：" class="headerlink" title="五、執行 VSCode 的第一個 C++："></a>五、執行 VSCode 的第一個 C++：</h2><ol><li><p>將電腦重新啟動來讓環境變數設置完成。<br><img src="https://i.imgur.com/oyzhIUe.png" alt="18"></p></li><li><p>寫出在 VSCode 中的第一個 C++ 程式 “Hello, world!” 吧。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Hello, world!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>點擊右上方三角形旁的箭頭來呼叫下拉選單，選擇 Run Code 模式執行，首次選擇完後可以直接點擊三角形來執行程式碼。<br><img src="https://i.imgur.com/57b2QgF.png" alt="19"></p></li><li><p>如果在終端機成功顯示 “Hello, world!” 的話，恭喜您本次教學就成功了喔。<br><img src="https://i.imgur.com/Gv5fNVq.png" alt="20"></p></li></ol><hr><p>此次教學已經結束，感謝各位看完整篇文章，希望大家跟著步驟製作都能成功讓 VSCode 新增一個 C++ IDE 身分。<br>歡迎加入使用 VSCode 這個大家庭，筆者當初會轉而使用 VSCode 的原因，就覺得 Dev-C++ 的顏色、主題和字體都不多，能夠個人化的空間不高，因此想要再看看有沒有其他工具能夠寫 C++，於是在網路上查詢到大多數人推薦使用 VSCode 寫程式，從此就不小心入坑 VSCode 了，不過，當時也是小白的我，想在 VSCode 中建置寫 C++ 的環境中就遇到頗多困難，網路上的教學雖然多，但是通常都教學步驟零零落落或是不夠詳細，讓當時的我吃足苦頭才做好一個能成功運行 C++ 的環境，因此想要製作一篇教學，來讓新手小白們也能輕鬆的建置好寫 C++ 的環境，在享受 VSCode 的便利和美麗的外觀的同時，也能快快樂樂的寫程式，歡迎大家一起加入程式這個大家庭。</p>]]></content>
    
    
    <summary type="html">本篇教學適用於 Windows 作業系統，將會使用 VSCode + MinGW 來搭建一個能夠撰寫 C++ 的 IDE。Visual Studio Code(簡稱：VSCode)是一個文本編輯器，支援語法突顯、程式碼補齊等等功能。</summary>
    
    
    
    <category term="Visual Studio Code 教學" scheme="http://smallshawn95.github.io/categories/Visual-Studio-Code-%E6%95%99%E5%AD%B8/"/>
    
    
    <category term="教學文" scheme="http://smallshawn95.github.io/tags/%E6%95%99%E5%AD%B8%E6%96%87/"/>
    
    <category term="C++" scheme="http://smallshawn95.github.io/tags/C/"/>
    
    <category term="Visual Studio Code" scheme="http://smallshawn95.github.io/tags/Visual-Studio-Code/"/>
    
  </entry>
  
  <entry>
    <title>Python Discord Bot 進階教學 — Tasks 篇</title>
    <link href="http://smallshawn95.github.io/python_discord_bot_course/tasks/"/>
    <id>http://smallshawn95.github.io/python_discord_bot_course/tasks/</id>
    <published>2023-11-04T05:14:00.000Z</published>
    <updated>2023-11-05T13:28:39.006Z</updated>
    
    <content type="html"><![CDATA[<p>這是一篇使用 discord.py 模組開發的 Discord Bot 進階教學文章。<br>是否想要讓 Discord Bot 在每天早上傳長輩早安圖呢？此篇教學將會介紹 tasks 計時器工具，這工具可以固定時間或者每隔一段時間執行程式，藉此實現想要讓 Discord Bot 做的循環任務。</p><p><img src="https://i.imgur.com/Hh7y0S6.png" alt="00"></p><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p><strong>歡迎加入筆者的 Discord 伺服器</strong> <a class="btn-beautify outline blue" href="https://discord.gg/Jtd3eVrFJs"   title="點此加入"><i class="far fa-hand-point-right"></i><span>點此加入</span></a></p></div><div class="note blue icon-padding flat"><i class="note-icon fa-solid fa-book"></i><p><strong>Python Discord Bot 教學文章和程式碼範例</strong> <a class="btn-beautify outline blue" href="https://github.com/smallshawn95/Python-Discord-Bot-Course.git"   title="點此前往"><i class="far fa-hand-point-right"></i><span>點此前往</span></a></p></div><hr><h2 id="一、Tasks-基本語法："><a href="#一、Tasks-基本語法：" class="headerlink" title="一、Tasks 基本語法："></a>一、Tasks 基本語法：</h2><p>下面的程式碼範例，是一個最基本的 Tasks 用法，功能是每秒輸出 “Hello, world!”，可以參考下方表格來根據需求更改循環時間、運作次數，更多用法可參考 <a href="https://discordpy.readthedocs.io/en/stable/ext/tasks/index.html">discord.py API</a>。</p><p><strong>@tasks.loop 傳入參數</strong></p><table><thead><tr><th align="center">名稱</th><th align="center">資料型態</th><th align="center">說明</th></tr></thead><tbody><tr><td align="center">seconds 秒鐘</td><td align="center">float</td><td align="center">幾秒鐘執行一次</td></tr><tr><td align="center">minutes 分鐘</td><td align="center">float</td><td align="center">幾分鐘執行一次</td></tr><tr><td align="center">hours 小時</td><td align="center">float</td><td align="center">幾小時執行一次</td></tr><tr><td align="center">time 時間</td><td align="center">datetime.time</td><td align="center">絕對時間執行一次</td></tr><tr><td align="center">count 次數</td><td align="center">int</td><td align="center">執行指定次數後退出</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 導入discord.ext模組中的tasks工具</span></span><br><span class="line"><span class="keyword">from</span> discord.ext <span class="keyword">import</span> tasks, commands</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TaskBase</span>(commands.Cog):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, bot: commands.Bot</span>):</span><br><span class="line">        self.bot = bot</span><br><span class="line">        <span class="comment"># 開始執行函式</span></span><br><span class="line">        self.hi.start()</span><br><span class="line">        self.start_time = time.time()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">cog_unload</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 取消執行函式</span></span><br><span class="line">        self.hi.cancel()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 定義要執行的循環函式</span></span><br><span class="line"><span class="meta">    @tasks.loop(<span class="params">seconds = <span class="number">1</span></span>)</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">hi</span>(<span class="params">self</span>):</span><br><span class="line">        execution_time = <span class="built_in">int</span>(time.time() - self.start_time)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;execution_time&#125;</span>sec: Hello, world!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">setup</span>(<span class="params">bot: commands.Bot</span>):</span><br><span class="line">    <span class="keyword">await</span> bot.add_cog(TaskBase(bot))</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/NxpcLJh.png" alt="01"></p><h2 id="二、Tasks-額外語法："><a href="#二、Tasks-額外語法：" class="headerlink" title="二、Tasks 額外語法："></a>二、Tasks 額外語法：</h2><h3 id="設定前後動作"><a href="#設定前後動作" class="headerlink" title="設定前後動作"></a>設定前後動作</h3><p>添加 <code>@函式.before_loop</code> 可以在執行此函式前執行其他動作，添加 <code>@函式.after_loop</code> 可以在結束執行此函式後執行其他動作。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">TaskAction</span>(commands.Cog):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, bot: commands.Bot</span>):</span><br><span class="line">        self.bot = bot</span><br><span class="line">        self.action.start()</span><br><span class="line"></span><br><span class="line"><span class="meta">    @tasks.loop(<span class="params">seconds = <span class="number">1</span></span>)</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">action</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Action&quot;</span>)</span><br><span class="line">        self.action.cancel()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 執行函式前的動作</span></span><br><span class="line"><span class="meta">    @action.before_loop</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">action_before</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Wait&quot;</span>)</span><br><span class="line">        <span class="comment"># 等待機器人上線完成</span></span><br><span class="line">        <span class="keyword">await</span> self.bot.wait_until_ready()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 結束執行函式後的動作</span></span><br><span class="line"><span class="meta">    @action.after_loop</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">action_after</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Stop&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/q3wJSdO.png" alt="02"></p><h3 id="設定循環次數"><a href="#設定循環次數" class="headerlink" title="設定循環次數"></a>設定循環次數</h3><p>在 <code>@tasks.loop()</code> 傳入 <code>count</code> 參數，可以設定函式的執行次數。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">TaskCount</span>(commands.Cog):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, bot: commands.Bot</span>):</span><br><span class="line">        self.bot = bot</span><br><span class="line">        self.count.start()</span><br><span class="line">        self.start_time = time.time()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 循環三次，每五秒輸出執行第幾次</span></span><br><span class="line"><span class="meta">    @tasks.loop(<span class="params">seconds = <span class="number">5</span>, count = <span class="number">3</span></span>)</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">count</span>(<span class="params">self</span>):</span><br><span class="line">        execution_time = <span class="built_in">int</span>(time.time() - self.start_time)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;execution_time&#125;</span>sec: Count <span class="subst">&#123;self.count.current_loop&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 函式執行三次後要執行的動作</span></span><br><span class="line"><span class="meta">    @count.after_loop</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">after_slow_count</span>(<span class="params">self</span>):</span><br><span class="line">        execution_time = <span class="built_in">int</span>(time.time() - self.start_time)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;execution_time&#125;</span>sec: Count end&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/ewxkTPI.png" alt="03"></p><h3 id="設定絕對時間"><a href="#設定絕對時間" class="headerlink" title="設定絕對時間"></a>設定絕對時間</h3><p>在 <code>@tasks.loop()</code> 傳入 <code>time</code> 參數，可以設定執行函式的絕對時間，如果要設定多個時間，只要儲存成串列傳入即可。</p><div class="note warning no-icon flat"><p>🔔 需要先導入 datetime 模組</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br></pre></td></tr></table></figure></div><ul><li>單個時間<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">TaskTime</span>(commands.Cog):</span><br><span class="line">    <span class="comment"># 臺灣時區 UTC+8</span></span><br><span class="line">    tz = datetime.timezone(datetime.timedelta(hours = <span class="number">8</span>))</span><br><span class="line">    <span class="comment"># 設定每日十二點執行一次函式</span></span><br><span class="line">    everyday_time = datetime.time(hour = <span class="number">0</span>, minute = <span class="number">0</span>, tzinfo = tz)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, bot: commands.Bot</span>):</span><br><span class="line">        self.bot = bot</span><br><span class="line">        self.everyday.start()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 每日十二點發送 &quot;晚安!瑪卡巴卡!&quot; 訊息</span></span><br><span class="line"><span class="meta">    @tasks.loop(<span class="params">time = everyday_time</span>)</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">everyday</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 設定發送訊息的頻道ID</span></span><br><span class="line">        channel_id = <span class="number">1021706869724684376</span></span><br><span class="line">        channel = self.bot.get_channel(channel_id)</span><br><span class="line">        embed = discord.Embed(</span><br><span class="line">            title = <span class="string">&quot;🛏 晚安！瑪卡巴卡！&quot;</span>,</span><br><span class="line">            description = <span class="string">f&quot;🕛 現在時間 <span class="subst">&#123;datetime.date.today()&#125;</span> 00:00&quot;</span>,</span><br><span class="line">            color = discord.Color.orange()</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">await</span> channel.send(embed = embed)</span><br></pre></td></tr></table></figure></li><li>多個時間<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">TaskTimes</span>(commands.Cog):</span><br><span class="line">    <span class="comment"># 設定整點執行一次函式</span></span><br><span class="line">    every_hour_time = [</span><br><span class="line">        datetime.time(hour = i, minute = <span class="number">0</span>, tzinfo = datetime.timezone(datetime.timedelta(hours = <span class="number">8</span>)))</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">24</span>)</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, bot: commands.Bot</span>):</span><br><span class="line">        self.bot = bot</span><br><span class="line">        self.every_hour.start()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 每小時發送報時訊息</span></span><br><span class="line"><span class="meta">    @tasks.loop(<span class="params">time = every_hour_time</span>)</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">every_hour</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 設定發送訊息的頻道ID</span></span><br><span class="line">        channel_id = <span class="number">1021706869724684376</span></span><br><span class="line">        channel = self.bot.get_channel(channel_id)</span><br><span class="line">        embed = discord.Embed(</span><br><span class="line">            title = <span class="string">f&quot;⏰ 現在時間【<span class="subst">&#123;datetime.time.hour()&#125;</span>】時&quot;</span>,</span><br><span class="line">            color = discord.Color.random()</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">await</span> channel.send(embed = embed)</span><br></pre></td></tr></table></figure></li></ul><hr><p>此次教學已經結束，感謝各位看完整篇文章，希望這篇教學有幫助到你們。目前筆者使用 tasks 計時器工具來做每日報時功能、資料定時爬蟲、更改 Bot 狀態等等，發揮自己的想像力和創造力，讓我們一起將自己的 Discord Bot 開發出更多、更有趣的指令、功能吧！</p>]]></content>
    
    
    <summary type="html">這是一篇使用 discord.py 模組開發的 Discord Bot 進階教學文章。是否想要讓 Discord Bot 在每天早上傳長輩早安圖呢？此篇教學將會介紹 tasks 計時器工具，這工具可以固定時間或者每隔一段時間執行程式，藉此實現想要讓 Discord Bot 做的循環任務。</summary>
    
    
    
    <category term="Python Discord Bot 教學" scheme="http://smallshawn95.github.io/categories/Python-Discord-Bot-%E6%95%99%E5%AD%B8/"/>
    
    
    <category term="Discord Bot" scheme="http://smallshawn95.github.io/tags/Discord-Bot/"/>
    
    <category term="Python" scheme="http://smallshawn95.github.io/tags/Python/"/>
    
    <category term="教學文" scheme="http://smallshawn95.github.io/tags/%E6%95%99%E5%AD%B8%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>Python Discord Bot 進階教學 — Slash 篇</title>
    <link href="http://smallshawn95.github.io/python_discord_bot_course/slash/"/>
    <id>http://smallshawn95.github.io/python_discord_bot_course/slash/</id>
    <published>2023-11-04T04:24:00.000Z</published>
    <updated>2024-02-05T09:40:21.411Z</updated>
    
    <content type="html"><![CDATA[<p>這是一篇使用 discord.py 模組開發的 Discord Bot 進階教學文章。<br>之前基礎教學中提到，運作 Discord Bot 指令除了使用關鍵字和前綴指令，還有斜線指令、按鈕、選單等等更多方式，未來筆者將會一一介紹。跟著此篇教學步驟能夠學到撰寫斜線指令以及參數如何使用。</p><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p><strong>歡迎加入筆者的 Discord 伺服器</strong> <a class="btn-beautify outline blue" href="https://discord.gg/Jtd3eVrFJs"   title="點此加入"><i class="far fa-hand-point-right"></i><span>點此加入</span></a></p></div><div class="note blue icon-padding flat"><i class="note-icon fa-solid fa-book"></i><p><strong>Python Discord Bot 教學文章和程式碼範例</strong> <a class="btn-beautify outline blue" href="https://github.com/smallshawn95/Python-Discord-Bot-Course.git"   title="點此前往"><i class="far fa-hand-point-right"></i><span>點此前往</span></a></p></div><hr><h2 id="一、斜線指令簡介："><a href="#一、斜線指令簡介：" class="headerlink" title="一、斜線指令簡介："></a>一、斜線指令簡介：</h2><p>Discord 官方在 2021 年 3 月份左右推出斜線指令（Slash Commands），它是 Discord 訊息交互的一種新方式，可以更簡單、直觀的使用指令功能，不僅打出 <code>/</code> 就可以了解 Bot 擁有的指令和各個指令的用途，還能清楚知道指令該傳入哪些參數，讓使用指令更加方便。<br><img src="https://i.imgur.com/5ee2W4K.png" alt="00"></p><h2 id="二、斜線指令基本語法："><a href="#二、斜線指令基本語法：" class="headerlink" title="二、斜線指令基本語法："></a>二、斜線指令基本語法：</h2><div class="note orange no-icon flat"><p>🔔 <strong>撰寫準備</strong><br>需要先在 <code>bot.py</code> 中的 <code>async def on_ready()</code> 中添加 <code>await bot.tree.sync()</code>，這行程式碼的功能要讓 Bot 的斜線指令可以同步到 Discord 上，底下程式碼可以順便得知同步多少個指令。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@bot.event</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">on_ready</span>():</span><br><span class="line">    slash = <span class="keyword">await</span> bot.tree.sync()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;目前登入身份 --&gt; <span class="subst">&#123;bot.user&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;載入 <span class="subst">&#123;<span class="built_in">len</span>(slash)&#125;</span> 個斜線指令&quot;</span>)</span><br></pre></td></tr></table></figure></div><p>撰寫斜線指令有單檔案和 Cog 架構兩種方式，簡單列出兩種方式的斜線指令基本架構，而接下來的教學都將使用 Cog 架構，如果不會 Cog 架構可以參考筆者這篇 <a href="https://smallshawn95.github.io/Python_Discord_Bot/cog/">Python Discord Bot 進階教學 — Cog 篇</a>。</p><ul><li><strong>單檔案</strong>  <div class="note orange no-icon flat"><p>🔔 裝飾器從 <code>@bot.command()</code> 改成 <code>@bot.tree.command()</code>，參數 <code>ctx</code> 更改成 <code>interaction</code></p></div>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># name指令顯示名稱，description指令顯示敘述</span></span><br><span class="line"><span class="comment"># name的名稱，中、英文皆可，但不能使用大寫英文</span></span><br><span class="line"><span class="meta">@bot.tree.command(<span class="params">name = <span class="string">&quot;hello&quot;</span>, description = <span class="string">&quot;Hello, world!&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">hello</span>(<span class="params">interaction: discord.Interaction</span>):</span><br><span class="line">    <span class="comment"># 回覆使用者的訊息</span></span><br><span class="line">    <span class="keyword">await</span> interaction.response.send_message(<span class="string">&quot;Hello, world!&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><strong>Cog 架構</strong>  <div class="note orange no-icon flat"><p>🔔 需要在程式開頭導入 app_command 指令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> discord <span class="keyword">import</span> app_commands</span><br></pre></td></tr></table></figure></div>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># name指令顯示名稱，description指令顯示敘述</span></span><br><span class="line"><span class="comment"># name的名稱，中、英文皆可，但不能使用大寫英文</span></span><br><span class="line"><span class="meta">@app_commands.command(<span class="params">name = <span class="string">&quot;hello&quot;</span>, description = <span class="string">&quot;Hello, world!&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">hello</span>(<span class="params">self, interaction: discord.Interaction</span>):</span><br><span class="line">    <span class="comment"># 回覆使用者的訊息</span></span><br><span class="line">    <span class="keyword">await</span> interaction.response.send_message(<span class="string">&quot;Hello, world!&quot;</span>)</span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/JFa7vhx.png" alt="01"> <img src="https://i.imgur.com/2yPhnGO.png" alt="02"> <img src="https://i.imgur.com/P0qIo0Q.png" alt="03"></li></ul><h2 id="三、斜線指令額外語法："><a href="#三、斜線指令額外語法：" class="headerlink" title="三、斜線指令額外語法："></a>三、斜線指令額外語法：</h2><p>更多有關斜線指令的資料可以參考 <a href="https://discordpy.readthedocs.io/en/latest/interactions/api.html#decorators">discord.py API</a>。</p><h3 id="參數敘述"><a href="#參數敘述" class="headerlink" title="參數敘述"></a>參數敘述</h3><p><code>@app_commands.describe()</code> 是一個讓參數增加文字敘述的函式，需要注意函式中的變數名稱需要和參數的名字一模一樣，否則會因為無法辨別而發生錯誤。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># @app_commands.describe(參數名稱 = 參數敘述)</span></span><br><span class="line"><span class="comment"># 參數: 資料型態，可以限制使用者輸入的內容</span></span><br><span class="line"><span class="meta">@app_commands.command(<span class="params">name = <span class="string">&quot;add&quot;</span>, description = <span class="string">&quot;計算相加值&quot;</span></span>)</span></span><br><span class="line"><span class="meta">@app_commands.describe(<span class="params">a = <span class="string">&quot;輸入數字&quot;</span>, b = <span class="string">&quot;輸入數字&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">self, interaction: discord.Interaction, a: <span class="built_in">int</span>, b: <span class="built_in">int</span></span>):</span><br><span class="line">    <span class="keyword">await</span> interaction.response.send_message(<span class="string">f&quot;Total: <span class="subst">&#123;a + b&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/YEAiMNi.png" alt="04"> <img src="https://i.imgur.com/f3WVqFN.png" alt="05"></p><h3 id="可選參數"><a href="#可選參數" class="headerlink" title="可選參數"></a>可選參數</h3><div class="note orange no-icon flat"><p>🔔 需要在程式開頭導入 typing 模組中的 Optional 工具。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br></pre></td></tr></table></figure></div><p>typing 模組中的 <code>Optional</code> 工具可以讓參數變成可選，可讓使用者依據自身需求填寫。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 參數: Optional[資料型態]，參數變成可選，可以限制使用者輸入的內容</span></span><br><span class="line"><span class="meta">@app_commands.command(<span class="params">name = <span class="string">&quot;say&quot;</span>, description = <span class="string">&quot;大聲說出來&quot;</span></span>)</span></span><br><span class="line"><span class="meta">@app_commands.describe(<span class="params">name = <span class="string">&quot;輸入人名&quot;</span>, text = <span class="string">&quot;輸入要說的話&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">say</span>(<span class="params">self, interaction: discord.Interaction, name: <span class="built_in">str</span>, text: <span class="type">Optional</span>[<span class="built_in">str</span>] = <span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">if</span> text == <span class="literal">None</span>:</span><br><span class="line">        text = <span class="string">&quot;。。。&quot;</span></span><br><span class="line">    <span class="keyword">await</span> interaction.response.send_message(<span class="string">f&quot;<span class="subst">&#123;name&#125;</span> 說 「<span class="subst">&#123;text&#125;</span>」&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/QaxTfrw.png" alt="06"> <img src="https://i.imgur.com/FsjNXYe.png" alt="07"></p><h3 id="選項清單"><a href="#選項清單" class="headerlink" title="選項清單"></a>選項清單</h3><div class="note orange no-icon flat"><p>🔔 為了撰寫程式碼更方便、快速，可以先將 discord.app_commands 中的 Choice 工具導入。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> discord.app_commands <span class="keyword">import</span> Choice</span><br></pre></td></tr></table></figure></div><p><code>@app_commands.choices()</code> 是一個製作讓使用者選擇的選項清單的函式，要注意每個參數最多只能添加 25 個選項。<br>更多選項清單的寫法，可以參考此篇的 <a href="https://discordpy.readthedocs.io/en/stable/interactions/api.html#discord.app_commands.choices">discord.py API</a>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># @app_commands.choices(參數 = [Choice(name = 顯示名稱, value = 隨意)])</span></span><br><span class="line"><span class="meta">@app_commands.command(<span class="params">name = <span class="string">&quot;order&quot;</span>, description = <span class="string">&quot;點餐機&quot;</span></span>)</span></span><br><span class="line"><span class="meta">@app_commands.describe(<span class="params">meal = <span class="string">&quot;選擇餐點&quot;</span>, size = <span class="string">&quot;選擇份量&quot;</span></span>)</span></span><br><span class="line"><span class="meta">@app_commands.choices(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="meta">    meal = [</span></span></span><br><span class="line"><span class="params"><span class="meta">        Choice(<span class="params">name = <span class="string">&quot;漢堡&quot;</span>, value = <span class="string">&quot;hamburger&quot;</span></span>),</span></span></span><br><span class="line"><span class="params"><span class="meta">        Choice(<span class="params">name = <span class="string">&quot;薯條&quot;</span>, value = <span class="string">&quot;fries&quot;</span></span>),</span></span></span><br><span class="line"><span class="params"><span class="meta">        Choice(<span class="params">name = <span class="string">&quot;雞塊&quot;</span>, value = <span class="string">&quot;chicken_nuggets&quot;</span></span>),</span></span></span><br><span class="line"><span class="params"><span class="meta">    ],</span></span></span><br><span class="line"><span class="params"><span class="meta">    size = [</span></span></span><br><span class="line"><span class="params"><span class="meta">        Choice(<span class="params">name = <span class="string">&quot;大&quot;</span>, value = <span class="number">0</span></span>),</span></span></span><br><span class="line"><span class="params"><span class="meta">        Choice(<span class="params">name = <span class="string">&quot;中&quot;</span>, value = <span class="number">1</span></span>),</span></span></span><br><span class="line"><span class="params"><span class="meta">        Choice(<span class="params">name = <span class="string">&quot;小&quot;</span>, value = <span class="number">2</span></span>),</span></span></span><br><span class="line"><span class="params"><span class="meta">    ]</span></span></span><br><span class="line"><span class="params"><span class="meta"></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">order</span>(<span class="params">self, interaction: discord.Interaction, meal: Choice[<span class="built_in">str</span>], size: Choice[<span class="built_in">int</span>]</span>):</span><br><span class="line">    <span class="comment"># 獲取使用指令的使用者名稱</span></span><br><span class="line">    customer = interaction.user.name</span><br><span class="line">    <span class="comment"># 使用者選擇的選項資料，可以使用name或value取值</span></span><br><span class="line">    meal = meal.value</span><br><span class="line">    size = size.value</span><br><span class="line">    <span class="keyword">await</span> interaction.response.send_message(<span class="string">f&quot;<span class="subst">&#123;customer&#125;</span> 點了 <span class="subst">&#123;size&#125;</span> 號 <span class="subst">&#123;meal&#125;</span> 餐&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/42AYhBo.png" alt="08"> <img src="https://i.imgur.com/ngvi69B.png" alt="09"></p><hr><p>此次教學已經結束，感謝各位看完整篇文章，如果文章中有哪些不懂、不清楚，或者覺得需要修正、更改，歡迎跟筆者反映，一起讓文章內容更完整，幫助每個人都能輕鬆學會撰寫斜線指令。<br>當初筆者要從前綴指令轉成斜線指令的寫法時，遇到許多的問題。比如照著官方文檔的程式碼範例撰寫，執行 Discord Bot 時卻沒有顯示出任何斜線指令，經過上網查詢和詢問他人得知，必須要加 <code>await bot.tree.sync()</code> 到程式碼中，才能讓斜線指令同步到 Discord 上。有時遇到困擾自己很久的問題，真的需要別人拋磚引玉才知道該如何解決。</p>]]></content>
    
    
    <summary type="html">這是一篇使用 discord.py 模組開發的 Discord Bot 進階教學文章。之前基礎教學中提到，運作 Discord Bot 指令除了使用關鍵字和前綴指令，還有斜線指令、按鈕、選單等等更多方式，未來筆者將會一一介紹。跟著此篇教學步驟能夠學到撰寫斜線指令以及參數如何使用。</summary>
    
    
    
    <category term="Python Discord Bot 教學" scheme="http://smallshawn95.github.io/categories/Python-Discord-Bot-%E6%95%99%E5%AD%B8/"/>
    
    
    <category term="Discord Bot" scheme="http://smallshawn95.github.io/tags/Discord-Bot/"/>
    
    <category term="Python" scheme="http://smallshawn95.github.io/tags/Python/"/>
    
    <category term="教學文" scheme="http://smallshawn95.github.io/tags/%E6%95%99%E5%AD%B8%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>Python Discord Bot 進階教學 — Cog 篇</title>
    <link href="http://smallshawn95.github.io/python_discord_bot_course/cog/"/>
    <id>http://smallshawn95.github.io/python_discord_bot_course/cog/</id>
    <published>2023-11-03T15:20:00.000Z</published>
    <updated>2023-11-05T13:28:57.657Z</updated>
    
    <content type="html"><![CDATA[<p>這是一篇使用 discord.py 模組開發的 Discord Bot 進階教學文章。<br>首先介紹 Discord Bot 和 Cog 架構關係，此架構能將各個指令分門別類，以及上線期間能夠新增、移除、更新指令。藉由 Cog 架構能讓 Discord Bot 方便維護和擁有良好的可讀性。</p><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p><strong>歡迎加入筆者的 Discord 伺服器</strong> <a class="btn-beautify outline blue" href="https://discord.gg/Jtd3eVrFJs"   title="點此加入"><i class="far fa-hand-point-right"></i><span>點此加入</span></a></p></div><div class="note blue icon-padding flat"><i class="note-icon fa-solid fa-book"></i><p><strong>Python Discord Bot 教學文章和程式碼範例</strong> <a class="btn-beautify outline blue" href="https://github.com/smallshawn95/Python-Discord-Bot-Course.git"   title="點此前往"><i class="far fa-hand-point-right"></i><span>點此前往</span></a></p></div><hr><h2 id="一、Cog-架構簡介："><a href="#一、Cog-架構簡介：" class="headerlink" title="一、Cog 架構簡介："></a>一、Cog 架構簡介：</h2><p>為了要讓未來 Discord Bot 方便維護以及增加可讀性，將各個指令分門別類會是一個不錯的方法，而 Cog 就是能夠實現這功能的架構，Cog 可以將程式碼分門別類，讓主程式只要負責執行載入檔案和卸載檔案的動作。<br>基礎教學的內容中，最後有提到使用關鍵字的 <code>on_message</code> 和前綴指令 <code>command</code> 如果放在同一個檔案會無法運作的問題，而使用 Cog 架構就可以來解決這個問題。<br>更多資訊可參考 <a href="https://discordpy.readthedocs.io/en/stable/ext/commands/cogs.html">Discord.py Cog 官方文檔</a>。</p><p><img src="https://i.imgur.com/gZezZSV.png" alt="00"></p><h2 id="二、Discord-Bot-Cog-架構介紹："><a href="#二、Discord-Bot-Cog-架構介紹：" class="headerlink" title="二、Discord Bot Cog 架構介紹："></a>二、Discord Bot Cog 架構介紹：</h2><p><img src="https://i.imgur.com/2N1dE69.png" alt="01"></p><ul><li><h3 id="Bot-主程式"><a href="#Bot-主程式" class="headerlink" title="Bot 主程式"></a>Bot 主程式</h3>負責執行載入(load)、卸載(unload)、重新載入(reload)程式檔案，可以讓 Discord Bot 上線期間就能更改指令。</li><li><h3 id="Cog-資料夾"><a href="#Cog-資料夾" class="headerlink" title="Cog 資料夾"></a>Cog 資料夾</h3>放置分類過後的程式檔案，利用檔名就能知道此檔案的用途，增加撰寫程式碼的效率。</li></ul><h2 id="三、Discord-Bot-Cog-主程式實作："><a href="#三、Discord-Bot-Cog-主程式實作：" class="headerlink" title="三、Discord Bot Cog 主程式實作："></a>三、Discord Bot Cog 主程式實作：</h2><div class="note blue flat"><p><strong>🔔 小幫助</strong><br>使用「前綴指令help(例：$help)」可以了解目前有哪些指令可以執行。<br><img src="https://i.imgur.com/6JRtZWD.png" alt="02"></p></div><h3 id="Load-載入"><a href="#Load-載入" class="headerlink" title="Load 載入"></a>Load 載入</h3><p>通常使用於撰寫好新的程式檔案要上線，或者要將之前載出的程式檔案再次上線。<br>執行語法：前綴符號load 檔案名稱(例：$load main)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@bot.command()</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">load</span>(<span class="params">ctx: commands.Context, extension: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="keyword">await</span> bot.load_extension(<span class="string">f&quot;cogs.<span class="subst">&#123;extension&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">await</span> ctx.send(<span class="string">f&quot;Loaded <span class="subst">&#123;extension&#125;</span> done.&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li><p>載入成功會回傳訊息讓使用者知道<br><img src="https://i.imgur.com/kBXRoXC.png" alt="03"></p></li><li><p>main檔案載入成功<br><img src="https://i.imgur.com/aMCFQsJ.png" alt="04"></p></li></ul><h3 id="UnLoad-卸載"><a href="#UnLoad-卸載" class="headerlink" title="UnLoad 卸載"></a>UnLoad 卸載</h3><p>通常使用於程式檔案出 Bug 時，卸載來阻止其他使用者執行到錯誤指令。<br>執行語法：前綴符號unload 檔案名稱(例：$unload main)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@bot.command()</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">unload</span>(<span class="params">ctx: commands.Context, extension: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="keyword">await</span> bot.unload_extension(<span class="string">f&quot;cogs.<span class="subst">&#123;extension&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">await</span> ctx.send(<span class="string">f&quot;UnLoaded <span class="subst">&#123;extension&#125;</span> done.&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li><p>卸載成功會回傳訊息讓使用者知道<br><img src="https://i.imgur.com/2zd9AMO.png" alt="05"></p></li><li><p>main檔案卸載成功<br><img src="https://i.imgur.com/3wgksJp.png" alt="06"></p></li></ul><h3 id="ReLoad-重新載入"><a href="#ReLoad-重新載入" class="headerlink" title="ReLoad 重新載入"></a>ReLoad 重新載入</h3><p>通常使用於更改過程式檔案要直接更新，或者 Debug 時的測試。<br>執行語法：前綴符號reload 檔案名稱(例：$reload main)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@bot.command()</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">reload</span>(<span class="params">ctx: commands.Context, extension: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="keyword">await</span> bot.reload_extension(<span class="string">f&quot;cogs.<span class="subst">&#123;extension&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">await</span> ctx.send(<span class="string">f&quot;ReLoaded <span class="subst">&#123;extension&#125;</span> done.&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li><p>重新載入成功會回傳訊息讓使用者知道<br><img src="https://i.imgur.com/1zvLMbT.png" alt="07"></p></li><li><p>main檔案重新載入成功<br><img src="https://i.imgur.com/GktM7cV.png" alt="08"> <img src="https://i.imgur.com/17JrSHm.png" alt="09"></p></li></ul><h3 id="完整主程式碼"><a href="#完整主程式碼" class="headerlink" title="完整主程式碼"></a>完整主程式碼</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> discord</span><br><span class="line"><span class="keyword">from</span> discord.ext <span class="keyword">import</span> commands</span><br><span class="line"></span><br><span class="line">intents = discord.Intents.<span class="built_in">all</span>()</span><br><span class="line">bot = commands.Bot(command_prefix = <span class="string">&quot;$&quot;</span>, intents = intents)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 當機器人完成啟動時</span></span><br><span class="line"><span class="meta">@bot.event</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">on_ready</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;目前登入身份 --&gt; <span class="subst">&#123;bot.user&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 載入指令程式檔案</span></span><br><span class="line"><span class="meta">@bot.command()</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">load</span>(<span class="params">ctx: commands.Context, extension: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="keyword">await</span> bot.load_extension(<span class="string">f&quot;cogs.<span class="subst">&#123;extension&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">await</span> ctx.send(<span class="string">f&quot;Loaded <span class="subst">&#123;extension&#125;</span> done.&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸載指令檔案</span></span><br><span class="line"><span class="meta">@bot.command()</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">unload</span>(<span class="params">ctx: commands.Context, extension: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="keyword">await</span> bot.unload_extension(<span class="string">f&quot;cogs.<span class="subst">&#123;extension&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">await</span> ctx.send(<span class="string">f&quot;UnLoaded <span class="subst">&#123;extension&#125;</span> done.&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新載入程式檔案</span></span><br><span class="line"><span class="meta">@bot.command()</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">reload</span>(<span class="params">ctx: commands.Context, extension: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="keyword">await</span> bot.reload_extension(<span class="string">f&quot;cogs.<span class="subst">&#123;extension&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">await</span> ctx.send(<span class="string">f&quot;ReLoaded <span class="subst">&#123;extension&#125;</span> done.&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一開始bot開機需載入全部程式檔案</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">load_extensions</span>():</span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> os.listdir(<span class="string">&quot;./cogs&quot;</span>):</span><br><span class="line">        <span class="keyword">if</span> filename.endswith(<span class="string">&quot;.py&quot;</span>):</span><br><span class="line">            <span class="keyword">await</span> bot.load_extension(<span class="string">f&quot;cogs.<span class="subst">&#123;filename[:-<span class="number">3</span>]&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> bot:</span><br><span class="line">        <span class="keyword">await</span> load_extensions()</span><br><span class="line">        <span class="keyword">await</span> bot.start(<span class="string">&quot;機器人的TOKEN&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 確定執行此py檔才會執行</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    asyncio.run(main())</span><br></pre></td></tr></table></figure><h2 id="四、Discord-Bot-Cog-資料夾實作："><a href="#四、Discord-Bot-Cog-資料夾實作：" class="headerlink" title="四、Discord Bot Cog 資料夾實作："></a>四、Discord Bot Cog 資料夾實作：</h2><p>只需要注意幾個地方，就能將基礎教學中的程式碼搬過來使用，而且可以將關鍵字觸發和前綴指令共同放在同一個檔案中。</p><ol><li><code>@bot.event</code> 要改成 <code>@commands.Cog.listener()</code></li><li><code>@bot.command()</code> 要改成 <code>@commands.command()</code></li><li>class 的名稱跟檔名相同比較好管理，習慣會首字母大寫</li><li>class 中使用到 bot 物件時，要改成 <code>self.bot</code> 才能使用</li><li>每個指令的第一個參數要是 <code>self</code>，否則程式碼會出錯</li></ol><ul><li><h3 id="程式碼結構"><a href="#程式碼結構" class="headerlink" title="程式碼結構"></a>程式碼結構</h3>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> discord</span><br><span class="line"><span class="keyword">from</span> discord.ext <span class="keyword">import</span> commands</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Main</span>(commands.Cog):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, bot: commands.Bot</span>):</span><br><span class="line">        self.bot = bot</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">setup</span>(<span class="params">bot: commands.Bot</span>):</span><br><span class="line">    <span class="keyword">await</span> bot.add_cog(Main(bot))</span><br></pre></td></tr></table></figure></li><li><h3 id="範例程式碼"><a href="#範例程式碼" class="headerlink" title="範例程式碼"></a>範例程式碼</h3>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> discord</span><br><span class="line"><span class="keyword">from</span> discord.ext <span class="keyword">import</span> commands</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定義名為 Main 的 Cog</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Main</span>(commands.Cog):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, bot: commands.Bot</span>):</span><br><span class="line">        self.bot = bot</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 前綴指令</span></span><br><span class="line"><span class="meta">    @commands.command()</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">Hello</span>(<span class="params">self, ctx: commands.Context</span>):</span><br><span class="line">        <span class="keyword">await</span> ctx.send(<span class="string">&quot;Hello, world!&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 關鍵字觸發</span></span><br><span class="line"><span class="meta">    @commands.Cog.listener()</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">on_message</span>(<span class="params">self, message: discord.Message</span>):</span><br><span class="line">        <span class="keyword">if</span> message.author == self.bot.user:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">if</span> message.content == <span class="string">&quot;Hello&quot;</span>:</span><br><span class="line">            <span class="keyword">await</span> message.channel.send(<span class="string">&quot;Hello, world!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Cog 載入 Bot 中</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">setup</span>(<span class="params">bot: commands.Bot</span>):</span><br><span class="line">    <span class="keyword">await</span> bot.add_cog(Main(bot))</span><br></pre></td></tr></table></figure></li></ul><hr><p>此次教學已經結束，感謝各位看完整篇文章，希望大家都能成功將指令分門別類，並且可以於 Discord Bot 上線期間載入、卸載、重新載入指令！<br>筆者認為文章中較難懂的地方會是 class 的部分，通常 class 類別是程式設計中後期才會學習到的，對於程式新手學習的難度頗高，因此筆者沒有特別詳細描述運作原理。對於開發 Discord Bot 來說，我們通常只要大概理解程式碼架構該如何撰寫以及傳入參數意義，就足夠滿足開發需求，如果未來想要增進 Discord Bot 運作效率或者用法，此時再來學習也不遲。</p>]]></content>
    
    
    <summary type="html">這是一篇使用 discord.py 模組開發的 Discord Bot 進階教學文章。首先介紹 Discord Bot 和 Cog 架構關係，此架構能將各個指令分門別類，以及上線期間能夠新增、移除、更新指令。藉由 Cog 架構能讓 Discord Bot 方便維護和擁有良好的可讀性。</summary>
    
    
    
    <category term="Python Discord Bot 教學" scheme="http://smallshawn95.github.io/categories/Python-Discord-Bot-%E6%95%99%E5%AD%B8/"/>
    
    
    <category term="Discord Bot" scheme="http://smallshawn95.github.io/tags/Discord-Bot/"/>
    
    <category term="Python" scheme="http://smallshawn95.github.io/tags/Python/"/>
    
    <category term="教學文" scheme="http://smallshawn95.github.io/tags/%E6%95%99%E5%AD%B8%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>Python Discord Bot 基礎教學</title>
    <link href="http://smallshawn95.github.io/python_discord_bot_course/base/"/>
    <id>http://smallshawn95.github.io/python_discord_bot_course/base/</id>
    <published>2023-11-03T14:48:00.000Z</published>
    <updated>2024-02-05T09:39:54.313Z</updated>
    
    <content type="html"><![CDATA[<p>這是一篇使用 discord.py 模組開發的 Discord Bot 基礎教學文章。<br>剛接觸程式的新手也能簡單製作一臺屬於自己的 Discord Bot，跟著此篇教學步驟能夠讓 Discord Bot 回覆簡單訊息。</p><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p><strong>歡迎加入筆者的 Discord 伺服器</strong> <a class="btn-beautify outline blue" href="https://discord.gg/Jtd3eVrFJs"   title="點此加入"><i class="far fa-hand-point-right"></i><span>點此加入</span></a></p></div><div class="note blue icon-padding flat"><i class="note-icon fa-solid fa-book"></i><p><strong>Python Discord Bot 教學文章和程式碼範例</strong> <a class="btn-beautify outline blue" href="https://github.com/smallshawn95/Python-Discord-Bot-Course.git"   title="點此前往"><i class="far fa-hand-point-right"></i><span>點此前往</span></a></p></div><hr><h2 id="一、Discord-簡介："><a href="#一、Discord-簡介：" class="headerlink" title="一、Discord 簡介："></a>一、Discord 簡介：</h2><p>Discord 誕生於西元 2015 年，一開始是為了遊戲玩家而設計的免費網路即時通話軟體，經過多年來的發展，現今教育人士、學生、商業人士等等各式各樣的人都有在使用 Discord 作為辦公討論的工具。<br>Discord 功能十分多樣，不僅能夠直播、通話、建立各種新的頻道和伺服器、身分組管理系統等等，還有支持 Markdown 語法，能夠讓文字產生更多的變化和應用。<br>Discord 在 Windows、macOS、Linux、iOS、Android 和網頁瀏覽器等等常見平台都能運行。</p><h2 id="二、Discord-Bot-簡介："><a href="#二、Discord-Bot-簡介：" class="headerlink" title="二、Discord Bot 簡介："></a>二、Discord Bot 簡介：</h2><p>Discord Bot 在 Discord 中扮演一個非常重要的角色，Bot 是機器人的意思，能夠自動化地幫助伺服器管理員執行繁忙瑣碎的任務，例如：歡迎新成員、自動分發身分組、點播音樂、管理伺服器秩序等等功能，最重要的是每位 Discord 使用者都能免費打造屬於自己獨一無二的機器人。</p><h2 id="三、Discord-Bot-創建："><a href="#三、Discord-Bot-創建：" class="headerlink" title="三、Discord Bot 創建："></a>三、Discord Bot 創建：</h2><ol><li><p>先登入 Discord 帳號。<br>連結：<a href="https://discord.com/">https://discord.com/</a><br><img src="https://i.imgur.com/GtVJdGb.png" alt="00"></p></li><li><p>前往 Discord Developers。<br>連結：<a href="https://discord.com/developers/applications">https://discord.com/developers/applications</a><br><img src="https://i.imgur.com/pI5fzsn.png" alt="01"></p></li><li><p>點擊 New Application，創建機器人的整合系統身分組名稱（未來可修改）。<br><img src="https://i.imgur.com/pPhNVeA.png" alt="02"></p><p><img src="https://i.imgur.com/6mw6atK.png" alt="03"></p></li><li><p>點選左側功能欄中的 Bot 進入創建頁面。<br><img src="https://i.imgur.com/WmxNxRq.png" alt="04"></p></li><li><p>點擊 Add Bot 創建機器人身分，接著點擊「Yes, do it!」，即可創建成功。<br><img src="https://i.imgur.com/ThOefK8.png" alt="05"> <img src="https://i.imgur.com/fYkyEe2.png" alt="06"></p></li><li><p>往下滑到 Privileged Gateway Intents 區塊，三個功能選項都點選並按下 Save Change，對未來製作機器人較方便操作。<br><img src="https://i.imgur.com/6EwRcb5.png" alt="07"></p></li><li><p>點擊左側功能欄 OAuth2 會跑出兩個選項，點擊 URL Generator 選項。<br><img src="https://i.imgur.com/ihFQndp.png" alt="08"></p></li><li><p>右方 SCOPES 區塊中選擇 bot，往下滑點選 Administrator，賦予機器人所有權限，而最下方的 GENERATED URL 就是邀請機器人到伺服器中的連結。<br><img src="https://i.imgur.com/FTu8RiW.png" alt="09"> <img src="https://i.imgur.com/0JOgLOm.png" alt="10"></p></li><li><p>前往上方獲得的連結，進入邀請頁面後，點選要加入的伺服器並授權機器人。<br><img src="https://i.imgur.com/uzMCPr7.png" alt="11"> <img src="https://i.imgur.com/5u8B9yE.png" alt="12"></p></li><li><p>如果看到機器人出現在成員列表中以及歡迎訊息，代表機器人創建成功。<br>   <img src="https://i.imgur.com/cNSv8h8.png" alt="13"> <img src="https://i.imgur.com/QG3C1Pq.png" alt="14"></p></li></ol><h2 id="四、Discord-Bot-撰寫："><a href="#四、Discord-Bot-撰寫：" class="headerlink" title="四、Discord Bot 撰寫："></a>四、Discord Bot 撰寫：</h2><p>執行 Discord Bot 指令大致分為三種方式，三種方式的程式碼撰寫都不太一樣，本次教學以關鍵字和前綴指令作為範例，其他斜線指令或者更多使用方式可以參考未來教學。</p><ul><li>關鍵字 - Hello, ping, say</li><li>前綴指令 - $Hello, %ping, &amp;say</li><li>斜線指令 - &#x2F;Hello, &#x2F;ping, &#x2F;say</li></ul><div class="note blue no-icon flat"><p>🔔 如果電腦中沒有撰寫 Python 程式的 IDE 的話，可以參考這篇 <a href="https://hackmd.io/@smallshawn95/vscode_write_py">Visual Studio Code 撰寫 Python 程式</a>。</p></div><ol><li><p>終端機輸入下方指令，安裝 <a href="https://discordpy.readthedocs.io/en/stable/">discord.py</a> 模組。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install discord.py</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/XD5Uih3.png" alt="15"></p></li><li><p>回到 Bot 設置頁面，機器人名字下方有機器人的 TOKEN，如果忘記之前的 TOKEN 或者不小心外露出去讓別人知道，只要點擊 Reset Token 換新的一組 TOKEN 即可。</p><div class="note orange no-icon flat"><p>🔔 TOKEN 是控制機器人的鑰匙，擁有者就可以操控機器人，要嚴禁保管！</p></div><p><img src="https://i.imgur.com/F53Hpii.png" alt="16"> <img src="https://i.imgur.com/xB4yzSF.png" alt="17"></p></li><li><p>撰寫一個簡單功能的程式並執行程式來啟動機器人。</p><ul><li>關鍵字<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 導入Discord.py模組</span></span><br><span class="line"><span class="keyword">import</span> discord</span><br><span class="line"></span><br><span class="line"><span class="comment"># client是跟discord連接，intents是要求機器人的權限</span></span><br><span class="line">intents = discord.Intents.default()</span><br><span class="line">intents.message_content = <span class="literal">True</span></span><br><span class="line">client = discord.Client(intents = intents)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 調用event函式庫</span></span><br><span class="line"><span class="meta">@client.event</span></span><br><span class="line"><span class="comment"># 當機器人完成啟動</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">on_ready</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;目前登入身份 --&gt; <span class="subst">&#123;client.user&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@client.event</span></span><br><span class="line"><span class="comment"># 當頻道有新訊息</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">on_message</span>(<span class="params">message: discord.Message</span>):</span><br><span class="line">    <span class="comment"># 排除機器人本身的訊息，避免無限循環</span></span><br><span class="line">    <span class="keyword">if</span> message.author == client.user:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="comment"># 新訊息包含Hello，回覆Hello, world!</span></span><br><span class="line">    <span class="keyword">if</span> message.content == <span class="string">&quot;Hello&quot;</span>:</span><br><span class="line">        <span class="keyword">await</span> message.channel.send(<span class="string">&quot;Hello, world!&quot;</span>)</span><br><span class="line"></span><br><span class="line">client.run(<span class="string">&quot;機器人的TOKEN&quot;</span>)</span><br></pre></td></tr></table></figure></li><li>前綴指令<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 導入Discord.py模組</span></span><br><span class="line"><span class="keyword">import</span> discord</span><br><span class="line"><span class="comment"># 導入commands指令模組</span></span><br><span class="line"><span class="keyword">from</span> discord.ext <span class="keyword">import</span> commands</span><br><span class="line"></span><br><span class="line"><span class="comment"># intents是要求機器人的權限</span></span><br><span class="line">intents = discord.Intents.<span class="built_in">all</span>()</span><br><span class="line"><span class="comment"># command_prefix是前綴符號，可以自由選擇($, #, &amp;...)</span></span><br><span class="line">bot = commands.Bot(command_prefix = <span class="string">&quot;%&quot;</span>, intents = intents)</span><br><span class="line"></span><br><span class="line"><span class="meta">@bot.event</span></span><br><span class="line"><span class="comment"># 當機器人完成啟動</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">on_ready</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;目前登入身份 --&gt; <span class="subst">&#123;bot.user&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@bot.command()</span></span><br><span class="line"><span class="comment"># 輸入%Hello呼叫指令</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">Hello</span>(<span class="params">ctx: commands.Context</span>):</span><br><span class="line">    <span class="comment"># 回覆Hello, world!</span></span><br><span class="line">    <span class="keyword">await</span> ctx.send(<span class="string">&quot;Hello, world!&quot;</span>)</span><br><span class="line"></span><br><span class="line">bot.run(<span class="string">&quot;機器人的TOKEN&quot;</span>)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>如果終端機顯示「登入身分 –&gt; 機器人名字」和看見 Discord 成員列表有顯示機器人上線，代表以上步驟都做對。<br><img src="https://i.imgur.com/ey1v4X5.png" alt="18"> <img src="https://i.imgur.com/mxacJIW.png" alt="19"></p></li><li><p>現在只要在頻道中使用關鍵字「Hello」或者「%Hello」，機器人就會回覆「Hello, world!」囉。</p><ul><li><p>關鍵字<br><img src="https://i.imgur.com/gsUIpv3.png" alt="20"></p></li><li><p>前綴指令<br><img src="https://i.imgur.com/PXqcOkd.png" alt="21"></p></li></ul></li></ol><hr><p>此次教學已經結束，感謝各位看完整篇文章，希望大家都能成功製作出屬於自己的 Discord Bot！<br>上面提到授權機器人權限的部分，為了讓 Discord Bot 正常運作的成功率提高，因此全部勾選。如果有興趣想了解各個權限代表什麼的人可以自己研究看看。<br>如果自己將關鍵字和前綴指令的程式範例合併起來，會發現 Discord Bot 無法正常運作，那是因為關鍵字的 <code>on_message</code> 和前綴指令 <code>command</code> 互相抵觸到。要解決這個問題的話，需要使用 Cog 工具，可參考這篇筆者撰寫的新教學，<a href="https://smallshawn95.github.io/Python_Discord_Bot/cog/">Python Discord Bot 進階教學 — Cog 篇</a>。</p>]]></content>
    
    
    <summary type="html">這是一篇使用 discord.py 模組開發的 Discord Bot 基礎教學文章。剛接觸程式的新手也能簡單製作一臺屬於自己的 Discord Bot，跟著此篇教學步驟能夠讓 Discord Bot 回覆簡單訊息。</summary>
    
    
    
    <category term="Python Discord Bot 教學" scheme="http://smallshawn95.github.io/categories/Python-Discord-Bot-%E6%95%99%E5%AD%B8/"/>
    
    
    <category term="Discord Bot" scheme="http://smallshawn95.github.io/tags/Discord-Bot/"/>
    
    <category term="Python" scheme="http://smallshawn95.github.io/tags/Python/"/>
    
    <category term="教學文" scheme="http://smallshawn95.github.io/tags/%E6%95%99%E5%AD%B8%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>燒雞姬 - 概述</title>
    <link href="http://smallshawn95.github.io/shao_ji_ji/home/"/>
    <id>http://smallshawn95.github.io/shao_ji_ji/home/</id>
    <published>2023-06-13T02:00:00.000Z</published>
    <updated>2023-11-05T07:09:51.212Z</updated>
    
    <content type="html"><![CDATA[<p>Hello, world!<br>It’s an honor to have met you.<br>I am a discord bot, my name is shao_ji_ji.<br>Welcome to invite me to your discord server!</p><h1 id="📌-特色介紹"><a href="#📌-特色介紹" class="headerlink" title="📌 特色介紹"></a>📌 特色介紹</h1><ul><li>所有功能完全免費，無需任何付費和訂閱</li><li>全面使用斜線指令，使用指令更加方便和直觀</li><li>新穎圖片庫功能，讓你跨伺服器也能輕鬆分享圖片</li><li>十大種類，接近一百個指令，等著你來探索和挖掘</li><li>指令持續增加中，歡迎喜歡嘗鮮的人邀回去研究</li></ul><h1 id="📌-開始使用"><a href="#📌-開始使用" class="headerlink" title="📌 開始使用"></a>📌 開始使用</h1><p>&#x2F;help，使用每個 Discord Bot 的第一步！</p><!--# 📌 指令分類default/blue/pink/red/purple/orange/green<a class="btn-beautify default outline larger" href="http://smallshawn95.github.io/shao_ji_ji/command/bot/"   title="Bot"><i class="fa-solid fa-code"></i><span>Bot</span></a><a class="btn-beautify pink outline larger" href="http://smallshawn95.github.io/shao_ji_ji/command/code/"   title="Code"><i class="fa-solid fa-code"></i><span>Code</span></a><a class="btn-beautify green outline larger" href="http://smallshawn95.github.io/shao_ji_ji/command/color/"   title="Color"><i class="fa-solid fa-code"></i><span>Color</span></a><a class="btn-beautify purple outline larger" href="http://smallshawn95.github.io/shao_ji_ji/command/date/"   title="Date"><i class="fa-solid fa-code"></i><span>Date</span></a><a class="btn-beautify orange outline larger" href="http://smallshawn95.github.io/shao_ji_ji/command/game/"   title="Game"><i class="fa-solid fa-code"></i><span>Game</span></a><a class="btn-beautify red outline larger" href="http://smallshawn95.github.io/shao_ji_ji/command/image/"   title="Image"><i class="fa-solid fa-code"></i><span>Image</span></a><a class="btn-beautify blue outline larger" href="http://smallshawn95.github.io/shao_ji_ji/command/inform/"   title="Inform"><i class="fa-solid fa-code"></i><span>Inform</span></a><a class="btn-beautify pink outline larger" href="http://smallshawn95.github.io/shao_ji_ji/command/invoice/"   title="Invoice"><i class="fa-solid fa-code"></i><span>Invoice</span></a><a class="btn-beautify green outline larger" href="http://smallshawn95.github.io/shao_ji_ji/command/qrcode/"   title="QRCode"><i class="fa-solid fa-code"></i><span>QRCode</span></a><a class="btn-beautify purple outline larger" href="http://smallshawn95.github.io/shao_ji_ji/command/tool/"   title="Tool"><i class="fa-solid fa-code"></i><span>Tool</span></a><a class="btn-beautify default outline larger" href="http://smallshawn95.github.io/shao_ji_ji/command/other/"   title="Other"><i class="fa-solid fa-code"></i><span>Other</span></a>--><h1 id="📌-相關資源"><a href="#📌-相關資源" class="headerlink" title="📌 相關資源"></a>📌 相關資源</h1><a class="btn-beautify blue outline larger" href="https://smallshawn95.github.io/shao_ji_ji/home"   title="官方文檔"><i class="fa-solid fa-paperclip"></i><span>官方文檔</span></a><a class="btn-beautify blue outline larger" href="https://discord.com/oauth2/authorize?client_id=1086121536081121391&permissions=140057635904&scope=bot"   title="邀請機器人"><i class="fa-solid fa-paperclip"></i><span>邀請機器人</span></a><a class="btn-beautify blue outline larger" href="https://discord.gg/Jtd3eVrFJs"   title="支援伺服器"><i class="fa-solid fa-paperclip"></i><span>支援伺服器</span></a><a class="btn-beautify blue outline larger" href="https://github.com/smallshawn95/Python-Discord-Bot-Course.git"   title="Python Discord Bot 教學系列"><i class="fa-solid fa-paperclip"></i><span>Python Discord Bot 教學系列</span></a>]]></content>
    
    
    <summary type="html">Hello, world! It&#39;s an honor to have met you. I am a discord bot, my name is shao_ji_ji. Welcome to invite me to your discord server!</summary>
    
    
    
    <category term="燒雞姬" scheme="http://smallshawn95.github.io/categories/%E7%87%92%E9%9B%9E%E5%A7%AC/"/>
    
    
    <category term="Discord Bot" scheme="http://smallshawn95.github.io/tags/Discord-Bot/"/>
    
  </entry>
  
  <entry>
    <title>Hello Hexo</title>
    <link href="http://smallshawn95.github.io/hello_hexo/"/>
    <id>http://smallshawn95.github.io/hello_hexo/</id>
    <published>2023-01-20T09:00:00.000Z</published>
    <updated>2024-02-05T15:28:24.153Z</updated>
    
    <content type="html"><![CDATA[<h1 id="我的第一篇文章的標題"><a href="#我的第一篇文章的標題" class="headerlink" title="我的第一篇文章的標題"></a>我的第一篇文章的標題</h1><p>Hello, world!</p><h2 id="Second-Title"><a href="#Second-Title" class="headerlink" title="Second Title"></a>Second Title</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Hello, world!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello, world!&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><ul><li>class: default&#x2F;primary&#x2F;success&#x2F;info&#x2F;warning&#x2F;danger</li><li>no-icon: no-icon</li><li>style: simple&#x2F;modern&#x2F;flat&#x2F;disabled</li></ul><div class="note [class] [no-icon] [style] flat"><p>Any content (support inline tags too.io).</p></div><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note [class] [no-icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><ul><li>color: default&#x2F;blue&#x2F;pink&#x2F;red&#x2F;purple&#x2F;orange&#x2F;green</li><li>icon: fontawesome icon&#x2F;no-icon</li><li>style: simple&#x2F;modern&#x2F;flat&#x2F;disabled</li></ul><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note [color] [icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note [color] [icon] [style] flat"><p>Any content (support inline tags too.io).</p></div><h3 id="Tab"><a href="#Tab" class="headerlink" title="Tab"></a>Tab</h3><div class="tabs" id="tab"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="tab-1">C</button><button type="button" class="tab " data-href="tab-2"><i class="fa-brands fa-python"></i>Python</button><button type="button" class="tab " data-href="tab-3"><i class="fa-solid fa-code" style="text-align: center;"></i></button></ul><div class="tab-contents"><div class="tab-item-content active" id="tab-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-item-content" id="tab-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-item-content" id="tab-3"><p><strong>This is Tab 3.</strong></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h3><ul><li>url: 鏈接</li><li>text: 按鈕文字</li><li>icon: 圖標</li><li>color: 按鈕背景顔色(style) 按鈕字體和邊框顔色(outline) default&#x2F;blue&#x2F;pink&#x2F;red&#x2F;purple&#x2F;orange&#x2F;green</li><li>style: 預設實心 outline&#x2F;留空</li><li>layout: 預設inline block&#x2F;留空</li><li>position: layout&#x3D;block 預設left center&#x2F;right&#x2F;留空</li><li>size: larger&#x2F;留空</li></ul><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn [url],[text],[icon],[color] [style] [layout] [position] [size] %&#125;</span><br></pre></td></tr></table></figure><a class="btn-beautify larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify blue larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify pink larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>]]></content>
    
    
    <summary type="html">第一篇 Hexo 文章。</summary>
    
    
    
    <category term="Hexo 功能" scheme="http://smallshawn95.github.io/categories/Hexo-%E5%8A%9F%E8%83%BD/"/>
    
    
  </entry>
  
</feed>
